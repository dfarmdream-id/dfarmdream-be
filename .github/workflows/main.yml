name: CI Build and Deploy BE

on:
  push:
    branches:
      - main

env:
  CR: ${{ vars.CR }}
  CR_PAT: ${{ secrets.CR_PAT }}
  CR_USER: ${{ secrets.CR_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
  SSH_HOST: ${{ secrets.PROD_SSH_HOST }}
  SSH_USER: ${{ secrets.PROD_SSH_USER }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Prepare Docker Build Environment
      - name: Prepare
        run: |
          CR_LOWER=$(echo "${{env.CR}}" | tr '[:upper:]' '[:lower:]')
          USERNAME_LOWER=$(echo "${{github.repository_owner}}" | tr '[:upper:]' '[:lower:]')
          PROJECTNAME_LOWER=$(echo "${{github.event.repository.name}}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="$CR_LOWER/$USERNAME_LOWER/$PROJECTNAME_LOWER-be:$BRANCH_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" > IMAGE_NAME.txt
          echo "IMAGE_NAME=$IMAGE_NAME" >> ${GITHUB_ENV}
          echo "PROJECTNAME_LOWER=$PROJECTNAME_LOWER" >> ${GITHUB_ENV}
          echo "IMAGE_NAME_WITHOUT_SHA=$CR_LOWER/$USERNAME_LOWER/$PROJECTNAME_LOWER-be" >> ${GITHUB_ENV}

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Login to Docker Registry
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{env.CR}}
          username: ${{env.CR_USER}}
          password: ${{ env.CR_PAT }}

      # Step 5: Build and Push Docker Image
      - name: Build and push BE Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{env.IMAGE_NAME}}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 6: Upload Artifact (Optional for Debugging)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-name
          path: IMAGE_NAME.txt

      # Step 7: Deploy to Server
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{env.IMAGE_NAME}}
            docker service update --image ${{env.IMAGE_NAME}} --with-registry-auth dfarmdream-be
